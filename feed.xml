<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://hu-xue.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://hu-xue.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-01-03T14:54:35+00:00</updated><id>https://hu-xue.github.io/feed.xml</id><title type="html">Xue Hu</title><subtitle>Hu Xue&apos;s Personal site powered by github pages. </subtitle><entry><title type="html">A Demo of MOT Tutorial use Matlab2023</title><link href="https://hu-xue.github.io/blog/2023/model_based_mot/" rel="alternate" type="text/html" title="A Demo of MOT Tutorial use Matlab2023"/><published>2023-12-31T22:25:00+00:00</published><updated>2023-12-31T22:25:00+00:00</updated><id>https://hu-xue.github.io/blog/2023/model_based_mot</id><content type="html" xml:base="https://hu-xue.github.io/blog/2023/model_based_mot/"><![CDATA[<h2 id="引言">引言</h2> <p>这是一个多目标跟踪例程，建立在运动模型和卡尔曼滤波的基础上的实现。</p> <h2 id="模型构建">模型构建</h2> <p>首先我们明确系统的运动模型为：</p> \[\mathrm{x}_{t} = [ x_t,y_t,\theta_t,v_t,\omega_t ]\] <p>根据运动模型:</p> \[\] <p>然后我们系统的控制量是</p> \[\mathrm{u}_t= [ v_t, \omega_t ]\] <p>如果对于一个多目标跟踪系统, 系统在时刻 \(t\) 检测到 \(k\) 辆车, 则对应的每辆车都有一个独立的运动模型. 所以需要有一个数据库保存所有跟踪到的每个 \(id\) 的车辆的运动模型的信息. 且这个信息是随着系统的时间更新而更新的.</p> <p>对于车辆搭载的传感器, 这里为了简单我们假设传感器可以直接观测到目标点的 \(x,y\) 坐标. 所以我们可以定义观测为:</p> \[\mathrm{z}_t= [x_t,y_t]\] <h2 id="代码实现">代码实现</h2> <h2 id="结果展示">结果展示</h2>]]></content><author><name></name></author><category term="learn-posts"/><category term="MOT"/><summary type="html"><![CDATA[this is what included TikZ code could look like]]></summary></entry></feed>